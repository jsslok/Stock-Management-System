import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.InputMismatchException;
import java.util.Scanner;

public class StockManagement {
	
	private static Product[] products;
	private static int max = 0;
	private static int productCount = 0;
	private final static int MEMBERS = 4; //number of group members

	public static int getMaxProd(Scanner input) {
		
		int max=-1;
		
		while (max < 0) {
			try {
			
				System.out.println("Enter the maximum number of products to store: ");
		
				max = input.nextInt();
			
				if (max < 0) {
					System.out.println("Please enter a positive number or 0.");
				
				}
				
		}catch(InputMismatchException e) {
			System.out.println("Invalid input. Please enter a valid integer.");
			input.nextLine();
			}
		}
		products = new Product[max];
		return max;
		
	}
	
	
	public static int displayContent(Product[]products, Scanner input){
		int index;
		boolean checkinput = false;

		System.out.println("Products: ");
		
		for(int i = 0;i <products.length;i++) {
			if (products[i] != null) {
				System.out.println(i + ". " + products[i].getName());
			}
		}
		
		do {
			System.out.print("Please select a product to update (enter index value):");
			
			index = input.nextInt();
			index -= 1;
			
			if (index < 0 || index > products.length - 1 || products[index] == null) {
				System.out.println("Invalid index value. Please select a valid product.");
			}
			else {
				checkinput = true;
			}
		}while(!checkinput);

		return index;
	}
	
	public static int displayMenu(Scanner input)
	{
		int choice;
		
		System.out.println("Menu:");
		System.out.println("1. View products");
		System.out.println("2. Add stock");
		System.out.println("3. Deduct stock");
		System.out.println("4. Discontinue product");
		System.out.println("0. Exit");
		System.out.print("Please enter a menu option: ");
		
		while(!input.hasNextInt()) {
			System.out.println("Invalid choice, please enter a valid integer.");
			input.next();
		}
		
		choice = input.nextInt();
		
		while( choice < 0 || choice > 4) {
			System.out.println("Invalid choice, please enter a valid menu option.");
			
			while (!input.hasNextInt()) {
	            System.out.println("Invalid input. Please enter a valid integer.");
	            input.next();
			}
			choice = input.nextInt();
		}
		return choice;
	}

	//luk
	public static void addStock(Product[] products, Scanner input) {
	    int choice;
	    boolean checkchoice = false;
	    boolean checkstock = false;
	    boolean checkctn = false;
	    String continueornot;
	    int stock;
	    
	    choice = displayContent(products, input);
	    
	    //check if product is discontinue or not
	    do {
	    	if (products[choice].getStatus() == false) {
	    		System.out.println("\nThis product has already been discontinued!");
	    		System.out.print("Do you wish to continue with another product? (Y/N): ");
	    		
	    		//exception handling
	    		do {
	    			continueornot=input.next();
	    			if (continueornot.charAt(0) == 'Y' || continueornot.charAt(0) == 'y') {
	    				
	    				System.out.println("");
	    				choice = displayContent(products, input);
		    			checkctn = true;			
		    		}
		    		else if (continueornot.charAt(0) == 'N' || continueornot.charAt(0) == 'n'){
		    			checkchoice = true;
		    			checkctn = true;
		    		}
		    		else {
		    			System.out.println("\nInvalid input!");
		    			System.out.print("Please enter your choice again. (Y/N): ");
		    		}
	    		}while(!checkctn);
	    		
	    	}
	    	else {
	    		checkchoice = true;
	    	}
	    }while(!checkchoice);
	    
	    //if not discontinued, add stock
	    if(products[choice].getStatus() == true) {
	    	System.out.println("\nNumber of stocks for " + products[choice].getName() + ": " + products[choice].getQuantity());
	    	do {
		    	System.out.print("Enter number of stock to add: ");
		    	stock = input.nextInt();
		    	
		    	if (stock < 0) {
		    		System.out.println("Invalid input!!!");	
		    	}
		    	else {
		    		checkstock = true;
		    	}
		    	
		    }while(!checkstock);
	    	
	    	products[choice].setQuantity(products[choice].getQuantity() + stock);
		    System.out.println("New number of stocks for " + products[choice].getName() + ": " + products[choice].getQuantity() + "\n"); 
	    }    
	}
	
	//luk
	public static void deductStock(Product[] products, Scanner input) {
	    int choice;
	    boolean checkchoice = false;
	    boolean checkstock = false;
	    boolean checkctn = false;
	    String continueornot;
	    int stock;
	    
	    choice = displayContent(products, input);
	    
	  //check if product is discontinue or not
	    do {
	    	if (products[choice].getStatus() == false) {
	    		System.out.println("\nThis product has already been discontinued!");
	    		System.out.print("Do you wish to continue with another product? (Y/N): ");
	    		
	    		//exception handling
	    		do {	    			
	    			continueornot=input.next();
	    			if (continueornot.charAt(0) == 'Y' || continueornot.charAt(0) == 'y') {
	    				
	    				System.out.println("");
	    				choice = displayContent(products, input);
		    			checkctn = true;
		    		}
		    		else if (continueornot.charAt(0) == 'N' || continueornot.charAt(0) == 'n'){
		    			checkchoice = true;
		    			checkctn = true;
		    		}
		    		else {
		    			System.out.println("\nInvalid input!");
		    			System.out.print("Please enter your choice again. (Y/N): ");
		    		}
	    		}while(!checkctn);
	    	}
	    	else {
	    		checkchoice = true;
	    	}
	    }while(!checkchoice);

	  //if not discontinued, deduct stock
	    if(products[choice].getStatus() == true) {
	    	System.out.println("\nNumber of stocks for " + products[choice].getName() + ": " + products[choice].getQuantity());
	    	do {
		    	System.out.print("Enter number of stock to deduct: ");
		    	stock = input.nextInt();
		    	
		    	if (stock < 0 || stock > products[choice].getQuantity()) {
		    		System.out.println("Invalid input!\n");	
		    	}
		    	else {
		    		checkstock = true;
		    	}
		    	
		    }while(!checkstock);
	    	
	    	products[choice].setQuantity(products[choice].getQuantity() - stock);
		    System.out.println("New number of stocks for " + products[choice].getName() + ": " + products[choice].getQuantity() + "\n"); 
	    } 
	}
	//luk
	public static void discontinueProduct(Product[] products, Scanner input) {
		int choice;
		String continueornot;
		boolean checkinput = false;
		boolean checkctn = false;
	    
	    choice = displayContent(products, input);
	    
	    do {
	    	if(products[choice].getStatus() == false) { //check if product already been discontinued
	    		System.out.println("\nThis product has already been discontinued!");
	    		System.out.print("Do you wish to discontinue another product? (Y/N): ");
	    		
	    		//exception handling
	    		do {
	    			continueornot=input.next();
	    			if (continueornot.charAt(0) == 'Y' || continueornot.charAt(0) == 'y') {
	    				
	    				System.out.println("");
	    				choice = displayContent(products, input);
		    			checkctn = true;
		    		}
		    		else if (continueornot.charAt(0) == 'N' || continueornot.charAt(0) == 'n'){
		    			checkinput = true;
		    			checkctn = true;
		    		}
		    		else {
		    			System.out.println("\nInvalid input!");
		    			System.out.print("Please enter your choice again. (Y/N): ");
		    		}
	    		}while(!checkctn);
	    		
	    	}
	    	else { //discontinue product
	    		products[choice].setStatus(false);
	    		System.out.println("\n" + products[choice].getName() + " has been successfully discontinued.\n");
	    		checkinput = true;
	    	}
	    }while(!checkinput);		
	}

	//py
		public static void userChoice (int choice, Product[] products, Scanner input)
	{
			switch (choice)
			{
				case 1: //View products
					displayProducts(products);
					break;
				case 2: //Add stock
					addStock(products, input);
					break;
				case 3: //Deduct stock
					deductStock(products, input);
					break;
				case 4: //Discontinue product
					discontinueProduct(products, input);
					break;
				case 0: //Exit
					break;
				default:
					System.out.println("\nInvalid choice, please enter a valid menu option.");
					break;
			}
				
			if (choice != 0)
			{
				System.out.print("\nDo you want to log out? (yes/no): ");
			    String answer = input.next().toLowerCase();
			    if (answer.equals("yes"))
			    	System.out.println();
			    else
			    {
			        System.out.println();
			        userChoice(displayMenu(input), products, input);
			    }
			} 
	}
	
		//py
	private static void addProductChoice(Product[] products, Scanner input) {
	    int choice;
	    boolean satisfied = false;
	    
	    while (!satisfied) {
	        do {
	            System.out.println("\nPlease select a product you wish to add: ");
	            System.out.println("1. Refrigerator");
	            System.out.println("2. TV");
	            System.out.println("3. Laptop");
	            System.out.println("4. Washing Machine");
	            System.out.print("Please enter your choice: ");
	            while (!input.hasNextInt()) {
	                System.out.print("\nPlease enter a valid number: ");
	                input.next();
	            }
	            choice = input.nextInt();
	            if (choice < 1 || choice > 4)
	                System.out.println("\nOnly numbers 1, 2, 3, or 4 are allowed!\n");
	        } while (choice < 1 || choice > 4);
	        
	        System.out.println();
	        
	        switch (choice) {
	            case 1:
	                addRefrigerator(products, input);
	                break;
	            case 2:
	                addTV(products, input);
	                break;
	            case 3:
	                addLaptop(products, input);
	                break;
	            case 4:
	                addWashingMachine(products, input);
	                break;
	        }
	        
	        // Ask the user if they want to add another product
	        System.out.print("\nDo you want to add another product? (yes/no): ");
	        String answer = input.next().toLowerCase();
	        if (!answer.equals("yes")) {
	            satisfied = true;
	        }
	        System.out.println();
	    }
	}

	//py
	private static void addRefrigerator(Product[] products, Scanner input) {
		boolean added = false;
	    do {
	        try {
	            input.nextLine(); // Clear the input buffer
	            
	            System.out.print("Enter the name of the refrigerator: ");
	            String name = input.nextLine();
	            
	            System.out.print("Enter the door design: ");
	            String doorDesign = input.nextLine();
	            
	            System.out.print("Enter the color: ");
	            String color = input.nextLine();
	            
	            System.out.print("Enter the capacity (in Litres): ");
	            int capacity = input.nextInt();
	            
	            System.out.print("Enter the quantity available in stock: ");
	            int quantity = input.nextInt();
	            
	            System.out.print("Enter the price (RM): ");
	            double price = input.nextDouble();
	            
	            System.out.print("Enter the item number: ");
	            int itemNum = input.nextInt();
	            
	            // Create a refrigerator object using the provided information
	            Refrigerator refrigerator = new Refrigerator(itemNum, name, quantity, price, doorDesign, color, capacity);
	            
	            // Find an empty slot in the products array and store the refrigerator object
	            for (int i = 0; i < products.length; i++) {
	                if (products[i] == null) 
	                {
	                    products[i] = refrigerator;
	                    added = true;
			    productCount++;
	                    break;
	                }
	            }
	            
	            if (added)
	            {
	            	System.out.println("\n************************Adding Refrigerator************************");
	            	System.out.println("\nA new refrigerator (" + refrigerator.getName() + ") has been added successfully. \n");
	            	System.out.println(refrigerator.toString());
	            	System.out.println("*******************************************************************");
	            }
	            	
	            else
	            	System.out.println("\nThe product has exceeded the maximum product limit. \nFailed to add a new refrigerator. \n\n");
	            
	            
	            // Exit the loop if data is entered successfully
	            break;
	            
	        } catch (InputMismatchException e) {
	            System.out.println("Invalid input format. Please press enter to create a valid refrigerator again.");
	            input.nextLine(); // Clear the input buffer
	        }
	    } while (true); // Loop indefinitely until valid input is received
	}

	//py
	public static void addWashingMachine(Product[] products, Scanner input)
	{
		boolean added = false;
	    do {
	        try {
	            input.nextLine(); // Clear the input buffer
	            
	            System.out.print("Enter the name of the washing machine: ");
	            String name = input.nextLine();
	            
	            System.out.print("Enter the type: ");
	            String type = input.nextLine();
	            
	            System.out.print("Enter the color: ");
	            String color = input.nextLine();
	            
	            System.out.print("Enter the capacity (in KG): ");
	            int capacity = input.nextInt();
	            
	            System.out.print("Enter the quantity available in stock: ");
	            int quantity = input.nextInt();
	            
	            System.out.print("Enter the price (RM): ");
	            double price = input.nextDouble();
	            
	            System.out.print("Enter the item number: ");
	            int itemNum = input.nextInt();
	            
	            // Create a washing machine object using the provided information
	            WashingMachine washingMachine = new WashingMachine(itemNum, name, quantity, price, type, color, capacity);
	            
	            // Find an empty slot in the products array and store the washing machine object
	            for (int i = 0; i < products.length; i++) {
	                if (products[i] == null) {
	                    products[i] = washingMachine;
	                    added = true;
			    productCount++;
	                    break;
	                }
	            }
	            
	            if (added)
	            {
	            	System.out.println("\n***********************Adding Washing Machine**********************");
	            	System.out.println("\nA new washing machine (" + washingMachine.getName() + ") has been added successfully. \n");
	            	System.out.println(washingMachine.toString());
	            	System.out.println("*******************************************************************");
	            }
	            	
	            else
	            	System.out.println("\nThe product has exceeded the maximum product limit. \nFailed to add a new washing machine. \n\n");
	            
	            // Exit the loop if data is entered successfully
	            break;
	            
	        } catch (InputMismatchException e) {
	            System.out.println("\nInvalid input format. \nPlease press enter to create a valid refrigerator again.\n");
	            input.nextLine(); // Clear the input buffer
	        }
	    } while (true); // Loop indefinitely until valid input is received
	}

	//lw
	public static void addTV(Product[] products, Scanner input) {
		int cont = 0;
		String name = null;
        String screenType = null;
        String resolution = null;
        double displaySize = 0;
        int quantity = 0;
        double price = 0;
        int itemNumber = 0;
        boolean continueInput = true;
		System.out.println("*******************************************************************");
		System.out.println("Please enter the TV product details");
		System.out.println("*******************************************************************");
		input.nextLine(); // clear buffer
		do {
			do {
				try {
					System.out.print("Enter TV name: ");
					name = input.nextLine();
					continueInput = false;
				}catch (InputMismatchException e) {
					System.out.print("Invalid input. Please enter only 1 word.");
				}
			}while (continueInput);
			continueInput = true;
			do {
				try {
					System.out.print("Enter screen type: ");
					screenType = input.nextLine();
					continueInput = false;
				}catch (InputMismatchException e) {
					System.out.print("Invalid input. Please enter only 1 word.");
					}
			}while (continueInput);
			continueInput = true;
			do {
				try {
					System.out.print("Enter resolution: ");
					resolution = input.nextLine();
					continueInput = false;
				}catch (InputMismatchException e) {
					System.out.print("Invalid input. Please enter only 1 word.");
					}
			}while (continueInput);
			continueInput = true;
			do {
				try {
			        System.out.print("Enter display size (in inches): ");
			        displaySize = input.nextDouble();
			        input.nextLine(); // clear buffer
			        continueInput = false;
				} catch (InputMismatchException e) {
					System.out.println("Invalid input. Please enter a valid number for display size.");
					input.nextLine();
				}
			}while(continueInput);
			continueInput = true;
			do {
				try {
		        System.out.print("Enter quantity available in stock: ");
		        quantity = input.nextInt();
		        input.nextLine(); // clear buffer
		        continueInput = false;
				}catch (InputMismatchException e) {
					System.out.println("Invalid input. Please enter a valid number for quantity available in stock.");
					input.nextLine();
				}
			}while(continueInput);
			continueInput = true;
			do {
				try {
		        System.out.print("Enter price (RM): ");
		        price = input.nextDouble();
		        input.nextLine(); // clear buffer
		        continueInput = false;
				}catch (InputMismatchException e) {
					System.out.println("Invalid input. Please enter a valid number for price.");
					input.nextLine();
				}
			}while(continueInput);
			continueInput = true;
			do {
				try {
					System.out.print("Enter item number: ");
					itemNumber = input.nextInt();
					input.nextLine(); // clear buffer
					continueInput = false;
				}catch (InputMismatchException e) {
					System.out.println("Invalid input. Please enter a valid number for item number.");
					input.nextLine();
				}
			}while(continueInput);
			
	        
	         if (productCount >= max) {
	        	System.out.println("\nThe product has exceeded the maximum product limit. \nFailed to add a new TV. \n\n");
	        }else {
	        	TV tv = new TV(itemNumber, name, quantity, price, screenType, resolution, displaySize);
	        	products[productCount] = tv;
	        	productCount++;
	        	System.out.println("\n******************************Adding TV****************************");
            	System.out.println("\nA new TV (" + tv.getName() + ") has been added successfully. \n");
            	System.out.println(tv.toString());
            	System.out.println("*******************************************************************");
	    		
	        }

	
		}while(cont == 1);

	}
	
	//lw
	public static void addLaptop(Product[] products, Scanner input) {
		int cont = 0;
		String name = null;
        String cpu = null;
        int ram = 0;
        int storage = 0;
        int quantity = 0;
        double price = 0;
        int itemNumber = 0;
        boolean continueInput = true;
		System.out.println("******************************************************************");
		System.out.println("Please enter the Laptop product details");
		System.out.println("******************************************************************");
		input.nextLine();
		do {
			
				System.out.print("Enter laptop name: ");
				name = input.nextLine();
				
				
				System.out.print("Enter laptop CPU type: ");
				cpu = input.nextLine();
				
				
				do {
					try {
						System.out.print("Enter laptop RAM: ");
						ram = input.nextInt();
						input.nextLine();
						continueInput = false;
					}catch(InputMismatchException e) {
						System.out.println("Invalid input. Please enter a valid number for RAM.");
						input.nextLine();
						
					}
				}while(continueInput);
				continueInput = true;
				do {
					try {
						System.out.print("Enter laptop storage: ");
						storage = input.nextInt();
						input.nextLine();
						continueInput = false;
					}catch(InputMismatchException e) {
						System.out.println("Invalid input. Please enter a valid number for storage.");
						input.nextLine();
						
					}
				}while(continueInput);
				continueInput = true;
				do {
					try {
			        System.out.print("Enter quantity available in stock: ");
			        quantity = input.nextInt();
			        input.nextLine(); // clear buffer
			        continueInput = false;
					}catch (InputMismatchException e) {
						System.out.println("Invalid input. Please enter a valid number for quantity available in stock.");
						input.nextLine();
					}
				}while(continueInput);
				continueInput = true;
				do {
					try {
			        System.out.print("Enter price (RM): ");
			        price = input.nextDouble();
			        input.nextLine(); // clear buffer
			        continueInput = false;
					}catch (InputMismatchException e) {
						System.out.println("Invalid input. Please enter a valid number for price.");
						input.nextLine();
					}
				}while(continueInput);
				continueInput = true;
				do {
					try {
						System.out.print("Enter item number: ");
						itemNumber = input.nextInt();
						input.nextLine(); // clear buffer
						continueInput = false;
					}catch (InputMismatchException e) {
						System.out.println("Invalid input. Please enter a valid number for item number.");
						input.nextLine();
					}
				}while(continueInput);
				continueInput = true;
				
				
			
			 
	        if (productCount >= max) {
		        	System.out.println("\nThe product has exceeded the maximum product limit. \nFailed to add a new laptop. \n\n");
		        }else {
		        	Laptop laptop = new Laptop(itemNumber, name, quantity, price, cpu, ram, storage);
		        	products[productCount] = laptop;
		        	productCount++;
		        	System.out.println("\n****************************Adding Laptop**************************");
	            	System.out.println("\nA new TV (" + laptop.getName() + ") has been added successfully. \n");
	            	System.out.println(laptop.toString());
	            	System.out.println("*******************************************************************");
		        	
		        }
	        
	       
		}while(cont ==1);
		
	}
	//lw
	public static void displayProducts(Product[] products) {
		System.out.println("*****************************************************************");
	    System.out.println("Content of the product");
	    System.out.println("*****************************************************************");
	    
	    boolean tvExist = false;
	    boolean refrigeratorExist = false;
	    boolean laptopExist = false;
	    boolean washingMachineExist = false;
	    
	    for (int i = 0; i < productCount; i++) {
	    	if (products[i] instanceof TV)
	    		tvExist = true;
	    	if (products[i] instanceof Refrigerator)
	    		refrigeratorExist = true;
	    	if (products[i] instanceof Laptop)
	    		laptopExist = true;
	    	if (products[i] instanceof WashingMachine)
	    		washingMachineExist = true;
	    }
	    if (refrigeratorExist)
	    	System.out.println("\n--Refrigerator--");
	    for (int i = 0; i < productCount; i++) {
	    	Product product = products[i];
	        if (product instanceof Refrigerator ) {
	       
	            System.out.println(product.toString());
	            System.out.println();
	        }
	        
	    }
	    
	    
	    if (tvExist)
	    	System.out.println("\n--TV--");
	    for (int i = 0; i < productCount; i++) {
	    	Product product = products[i];
	        if (product instanceof TV ) {
	       
	            System.out.println(product.toString());
	            System.out.println();
	        }
	        
	    }
	    System.out.println();
	    if (laptopExist)
	    	System.out.println("\n--Laptop--");
	    for (int i = 0; i < productCount; i++) {
	    	Product product = products[i];
	        if (product instanceof Laptop ) {
	       
	            System.out.println(product.toString());
	            System.out.println();
	        }
	        
	    }
	    
	    
	    if (washingMachineExist)
	    	System.out.println("\n--Washing Machine--");
	    for (int i = 0; i < productCount; i++) {
	    	Product product = products[i];
	        if (product instanceof WashingMachine ) {
	       
	            System.out.println(product.toString());
	            System.out.println();
	        }
	        
	    }
	}
	public static void displayMember() {
	
		String[] grpmember = new String[MEMBERS];
		grpmember[0] = "Cheng Puei Ying";
		grpmember[1] = "Chin Zi Wei";
		grpmember[2] = "Look Zheng Hong";
		grpmember[3] = "Tan Lok Wei";
		System.out.println("Group Member: ");
		System.out.println("*****************************************************************");
		for (String member : grpmember) {
			System.out.println("Name: " + member );
		};
		System.out.println("*****************************************************************");
	}
	//lw
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		
		System.out.println("*****************************************************************");
		System.out.println("Welcome to the SMS (Store Management System)");
		System.out.println("*****************************************************************");
		LocalDateTime currentDateTime = LocalDateTime.now();
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
		String formattedDateTime = currentDateTime.format(formatter);
		System.out.println("Current Date and Time: " + formattedDateTime);
		System.out.println("*****************************************************************");
		
		displayMember();
		
		UserInfo userInfo = new UserInfo();
		max = getMaxProd(input);
		
		addProductChoice(products, input);
		userChoice(displayMenu(input), products, input);
		
		userInfo.displayLogOutInfo();
		input.close();
		
		
	}
		
}
